{"version":3,"sources":["logo.svg","NavBar.js","Home.js","About.js","Cats.js","OneCat.js","Dogs.js","OneDog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","react_default","a","createElement","Link","to","Home","About","Cats","catListItems","catList","map","catName","index","key","concat","OneCat","allToys","toys","match","params","myToys","toy","Dogs","dogListItems","dogList","dogName","dogLinkPath","Fragment","OneDog","oneDogsInfo","dogInfo","dogToysListItems","owner","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","catToys","Oakley","Milla","Whisper","Neo","dogs","Skyler","Leroy","Ladybird","Judge","_this2","BrowserRouter","src_NavBar","Route","path","exact","component","render","src_Cats","assign","keys","src_OneCat","src_Dogs","src_OneDog","Component","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40c053b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { \n  Link \n} from 'react-router-dom';\n\nconst NavBar = (props) => {\n    return (\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/about\">About</Link></li>\n        <li><Link to=\"/cats\">Cats</Link></li>\n        <li><Link to=\"/dogs\">Dogs</Link></li>\n      </ul>\n    );\n};\n\nexport default NavBar;","import React from 'react';\n\nconst Home = (props) => {\n    return (\n        <div>\n            <h1>Home</h1>\n        </div>\n    );\n};\n\nexport default Home;\n\n","import React from 'react';\n\nconst About = (props) => {\n  return (\n    <div>\n        <h1>About</h1>\n    </div>\n  );\n};\n\nexport default About;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Cats = (props) => {\n\n  const catListItems = props.catList.map((catName, index) => {\n    return (\n      <li key={index}>\n          <Link to={`/cats/${catName}`}>{catName}</Link>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n        <h1>CAAAAATSSSz!</h1>\n        <ul>\n          {catListItems}\n        </ul>        \n    </div>\n  );\n};\n\nexport default Cats;","import React from 'react';\n\nconst OneCat = (props) => {\n    const allToys = props.toys;\n    const catName = props.match.params.catName;\n    const myToys = allToys[catName];\n    return (\n        <div>\n            <h2>\n                {catName}\n            </h2>\n            <ul>\n                {myToys.map((toy) => {\n                    return <li>{toy}</li>\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default OneCat;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Dogs = (props) => {\n\n    const dogListItems = props.dogList.map((dogName, index) => {\n        const dogLinkPath = `/dogs/${dogName}`;\n        return (\n            <li key={index}>                \n                <Link to={dogLinkPath}>{dogName}</Link>\n            </li>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            <h1>DAGS</h1>\n            <ul>\n                {dogListItems}\n            </ul>\n        </React.Fragment>  \n    );\n\n    // return (\n    //     React.createElement('div', null, \n    //         React.createElement('h1', null, 'DAGS'),\n    //         React.createElement('ul', null, dogListItems)\n    //     )\n    // )\n\n\n};\n\nexport default Dogs;","import React from 'react';\n\nconst OneDog = (props) => {\n    const dogInfo = props.dogInfo;\n    const dogName = props.match.params.dogName;\n    const oneDogsInfo = dogInfo[dogName];\n    const dogToysListItems = oneDogsInfo.toys.map(toy => {\n        return (\n            <li>{toy}</li>\n        );\n    });\n    return (\n        <div>\n            <h1>Hey I am {props.match.params.dogName}.</h1>\n            <h2>My owner is {oneDogsInfo.owner}.</h2>\n            <h3>I like:</h3>\n            <ul>\n                {dogToysListItems}\n            </ul>\n        </div>\n\n    );\n};\n\nexport default OneDog;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router, // Watches for changes to URL\n  Route,                   // Renders components based on the specific URL\n  //Link                     // Changes the URL so the Router sees it\n} from 'react-router-dom';\n\nimport NavBar from './NavBar';\nimport Home from './Home';\nimport About from './About';\nimport Cats from './Cats';\nimport OneCat from './OneCat';\nimport Dogs from './Dogs';\nimport OneDog from './OneDog';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // catList: [\n      //   'Oakley',\n      //   'Milla',\n      //   'Whisper',\n      //   'Neo'\n      // ],\n      catToys: {\n        'Oakley': [\n          'string',\n          'bookmarks',\n          'ice',\n          'daddy\\'s face'\n        ],\n        'Milla': [\n          'drool'\n        ],\n        'Whisper': [\n          'string'\n        ],\n        'Neo': [\n          'the couch'\n        ]\n      },\n      dogs: {\n        'Skyler': {\n          'owner': 'Evan',\n          'toys': [\n            'tennis balls',\n            'shoes'\n          ]\n        },\n        'Leroy': {\n          'owner': 'Ian',\n          'toys': [\n            'mr squeaky',\n            'shoes'\n          ]\n        },\n        'Ladybird': {\n          'owner': 'Hank',\n          'toys': [\n            'martinis',\n            'self-loathing'\n          ]\n        },\n        'Judge': {\n          'owner': 'Clare',\n          'toys': []\n        }\n      }\n    };\n  }\n  render() {\n    // const dogName = 'Ladybird';\n    // console.log(this.state.dogToys.dogName);\n    // console.log(this.state.dogToys[`${dogName}`]);\n    // console.log(this.state.dogToys[dogName]);\n    // console.log(this.state.dogToys['Ladybird']);\n    // console.log([\n    //   'martinis',\n    //   'self-loathing'\n    // ]);\n    return (\n      <Router>\n        <div>\n          <NavBar />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/cats\" render={(props) => {\n            return <Cats catList={Object.keys(this.state.catToys)} {...props} />\n          }} />          \n          <Route path=\"/cats/:catName\" render={(props) => {\n            return <OneCat toys={this.state.catToys} {...props} />\n          }} />\n          {/* <Route path=\"/dogs\" component={Dogs} /> */}\n          <Route path=\"/dogs\" render={(props) => {\n            return (<Dogs dogList={Object.keys(this.state.dogs)} {...props} />);\n          }} />\n\n          {/* <Route path=\"/dogs/:dogName\" component={OneDog} /> */}\n          <Route path=\"/dogs/:dogName\" render={(props) => {            \n            return (<OneDog dogInfo={this.state.dogs} {...props} />);\n          }} />\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}